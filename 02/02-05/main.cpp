// Код програми 2.5. Демонстрація механізму доступу до членів класу

#include <iostream>             // Для потокового введення-виведення
#include <cstdlib>          	// Стандартна бібліотека С++

using namespace std;        	// Використання стандартного простору імен

class MyClass {                 // Оголошення класового типу
private:                        // Специфікатор доступу, після якого оголошуються закриті члени класу
    int a;                      // Закритий атрибут
public:
    int b;                      // Відкритий атрибут (порушується принцип Інкапсуляція)
    void setA(int c);           // Відкритий метод (функція-члени класу)
    double getA();              // Відкритий метод (функція-члени класу)
    void func();                // Відкритий метод (функція-члени класу)
};

void MyClass::setA(int c) {     // Сетер
    a = c;                      // Пряме звернення до атрибуту a
    b = c * c;                  // Пряме звернення до атрибуту b
}

double MyClass::getA() {        // Повернення значення закритого члена даних /Гетер
    return a;                   // Пряме звернення до атрибуту a
}

void MyClass::func() {          // Надання значень членам-даних
    setA(0);                    // Прямий виклик функції setA() створеним об'єктом
}

int main() {
    MyClass object;             // Створення об'єкта класу
    object.setA(5);             // Надання значень членам-дани
    cout << "Об'єкт object пiсля виклику функцiї object.setA(5): " << object.getA() << " ";

    // До члена b можна отримати прямий доступ, оскільки він є public-членом
    cout << object.b << endl;

    // Члену b можна надати значення безпосередньо, оскільки він є public-членом
    object.b = 20;

    cout << "Об'єкт object пiсля встановлення члена object.b = 20: ";
    cout << object.getA() << " " << object.b << endl;
    object.func();
    cout << "Об'єкт object пiсля виклику функцiї object.func(): ";
    cout << object.getA() << " " << object.b << endl;
    
    //system("PAUSE");
    return EXIT_SUCCESS;
}
